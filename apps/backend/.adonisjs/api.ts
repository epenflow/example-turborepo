// @ts-nocheck
/* eslint-disable */
// --------------------------------------------------
// This file is auto-generated by Tuyau. Do not edit manually !
// --------------------------------------------------

import type { MakeTuyauRequest, MakeTuyauResponse } from '@tuyau/utils/types'
import type { InferInput } from '@vinejs/vine/types'

type ApiUsersGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/users_controller.ts').default['index'], false>
}
type ApiUsersPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/users_controller.ts').default['store'], false>
}
type ApiUsersIdGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/users_controller.ts').default['show'], false>
}
type ApiUsersIdPutPatch = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/users_controller.ts').default['update'], false>
}
type ApiUsersIdDelete = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/users_controller.ts').default['destroy'], false>
}
type AuthSigninPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth/session_controller.ts').default['signIn'], false>
}
type AuthSignupPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth/session_controller.ts').default['signUp'], false>
}
type AuthForgotpasswordPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth/password_controller.ts').default['forgot'], false>
}
type AuthResetpasswordPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth/password_controller.ts').default['reset'], false>
}
type AuthMeGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth/session_controller.ts').default['me'], false>
}
type AuthChangepasswordPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth/password_controller.ts').default['change'], false>
}
type AuthDeleteaccountPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth/account_controller.ts').default['destroy'], false>
}
type AuthUpdateaccountPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth/account_controller.ts').default['update'], false>
}
type AuthSignoutDelete = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth/session_controller.ts').default['signOut'], false>
}
export interface ApiDefinition {
  'api': {
    'users': {
      '$url': {
      };
      '$get': ApiUsersGetHead;
      '$head': ApiUsersGetHead;
      '$post': ApiUsersPost;
      ':id': {
        '$url': {
        };
        '$get': ApiUsersIdGetHead;
        '$head': ApiUsersIdGetHead;
        '$put': ApiUsersIdPutPatch;
        '$patch': ApiUsersIdPutPatch;
        '$delete': ApiUsersIdDelete;
      };
    };
  };
  'auth': {
    'sign-in': {
      '$url': {
      };
      '$post': AuthSigninPost;
    };
    'sign-up': {
      '$url': {
      };
      '$post': AuthSignupPost;
    };
    'forgot-password': {
      '$url': {
      };
      '$post': AuthForgotpasswordPost;
    };
    'reset-password': {
      '$url': {
      };
      '$post': AuthResetpasswordPost;
    };
    'me': {
      '$url': {
      };
      '$get': AuthMeGetHead;
      '$head': AuthMeGetHead;
    };
    'change-password': {
      '$url': {
      };
      '$post': AuthChangepasswordPost;
    };
    'delete-account': {
      '$url': {
      };
      '$post': AuthDeleteaccountPost;
    };
    'update-account': {
      '$url': {
      };
      '$post': AuthUpdateaccountPost;
    };
    'sign-out': {
      '$url': {
      };
      '$delete': AuthSignoutDelete;
    };
  };
}
const routes = [
  {
    params: [],
    name: 'users.index',
    path: '/api/users',
    method: ["GET","HEAD"],
    types: {} as ApiUsersGetHead,
  },
  {
    params: [],
    name: 'users.store',
    path: '/api/users',
    method: ["POST"],
    types: {} as ApiUsersPost,
  },
  {
    params: ["id"],
    name: 'users.show',
    path: '/api/users/:id',
    method: ["GET","HEAD"],
    types: {} as ApiUsersIdGetHead,
  },
  {
    params: ["id"],
    name: 'users.update',
    path: '/api/users/:id',
    method: ["PUT","PATCH"],
    types: {} as ApiUsersIdPutPatch,
  },
  {
    params: ["id"],
    name: 'users.destroy',
    path: '/api/users/:id',
    method: ["DELETE"],
    types: {} as ApiUsersIdDelete,
  },
  {
    params: [],
    name: 'reset-password',
    path: '/auth/reset-password',
    method: ["POST"],
    types: {} as AuthResetpasswordPost,
  },
] as const;
export const api = {
  routes,
  definition: {} as ApiDefinition
}

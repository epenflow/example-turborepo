/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as dashboardLayoutRouteImport } from './routes/(dashboard)/layout'
import { Route as PageRouteImport } from './routes/page'
import { Route as dashboardMeRouteImport } from './routes/(dashboard)/me'
import { Route as authSignUpRouteImport } from './routes/(auth)/sign-up'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as dashboardsettingsLayoutRouteImport } from './routes/(dashboard)/(settings)/layout'
import { Route as authqueryLayoutRouteImport } from './routes/(auth)/(query)/layout'
import { Route as dashboardUsersPageRouteImport } from './routes/(dashboard)/users/page'
import { Route as dashboardUsersIdRouteImport } from './routes/(dashboard)/users/$id'
import { Route as dashboardsettingsPasswordRouteImport } from './routes/(dashboard)/(settings)/password'
import { Route as dashboardsettingsAccountRouteImport } from './routes/(dashboard)/(settings)/account'
import { Route as authqueryResetPasswordRouteImport } from './routes/(auth)/(query)/reset-password'
import { Route as authqueryEmailVerificationRouteImport } from './routes/(auth)/(query)/email-verification'

const dashboardLayoutRoute = dashboardLayoutRouteImport.update({
  id: '/(dashboard)',
  getParentRoute: () => rootRouteImport,
} as any)
const PageRoute = PageRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardMeRoute = dashboardMeRouteImport.update({
  id: '/me',
  path: '/me',
  getParentRoute: () => dashboardLayoutRoute,
} as any)
const authSignUpRoute = authSignUpRouteImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardsettingsLayoutRoute = dashboardsettingsLayoutRouteImport.update({
  id: '/(settings)',
  getParentRoute: () => dashboardLayoutRoute,
} as any)
const authqueryLayoutRoute = authqueryLayoutRouteImport.update({
  id: '/(auth)/(query)',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardUsersPageRoute = dashboardUsersPageRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => dashboardLayoutRoute,
} as any)
const dashboardUsersIdRoute = dashboardUsersIdRouteImport.update({
  id: '/users/$id',
  path: '/users/$id',
  getParentRoute: () => dashboardLayoutRoute,
} as any)
const dashboardsettingsPasswordRoute =
  dashboardsettingsPasswordRouteImport.update({
    id: '/password',
    path: '/password',
    getParentRoute: () => dashboardsettingsLayoutRoute,
  } as any)
const dashboardsettingsAccountRoute =
  dashboardsettingsAccountRouteImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => dashboardsettingsLayoutRoute,
  } as any)
const authqueryResetPasswordRoute = authqueryResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => authqueryLayoutRoute,
} as any)
const authqueryEmailVerificationRoute =
  authqueryEmailVerificationRouteImport.update({
    id: '/email-verification',
    path: '/email-verification',
    getParentRoute: () => authqueryLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof dashboardsettingsLayoutRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/me': typeof dashboardMeRoute
  '/email-verification': typeof authqueryEmailVerificationRoute
  '/reset-password': typeof authqueryResetPasswordRoute
  '/account': typeof dashboardsettingsAccountRoute
  '/password': typeof dashboardsettingsPasswordRoute
  '/users/$id': typeof dashboardUsersIdRoute
  '/users': typeof dashboardUsersPageRoute
}
export interface FileRoutesByTo {
  '/': typeof dashboardsettingsLayoutRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/me': typeof dashboardMeRoute
  '/email-verification': typeof authqueryEmailVerificationRoute
  '/reset-password': typeof authqueryResetPasswordRoute
  '/account': typeof dashboardsettingsAccountRoute
  '/password': typeof dashboardsettingsPasswordRoute
  '/users/$id': typeof dashboardUsersIdRoute
  '/users': typeof dashboardUsersPageRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof PageRoute
  '/(dashboard)': typeof dashboardLayoutRouteWithChildren
  '/(auth)/(query)': typeof authqueryLayoutRouteWithChildren
  '/(dashboard)/(settings)': typeof dashboardsettingsLayoutRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(dashboard)/me': typeof dashboardMeRoute
  '/(auth)/(query)/email-verification': typeof authqueryEmailVerificationRoute
  '/(auth)/(query)/reset-password': typeof authqueryResetPasswordRoute
  '/(dashboard)/(settings)/account': typeof dashboardsettingsAccountRoute
  '/(dashboard)/(settings)/password': typeof dashboardsettingsPasswordRoute
  '/(dashboard)/users/$id': typeof dashboardUsersIdRoute
  '/(dashboard)/users/': typeof dashboardUsersPageRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/forgot-password'
    | '/sign-in'
    | '/sign-up'
    | '/me'
    | '/email-verification'
    | '/reset-password'
    | '/account'
    | '/password'
    | '/users/$id'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forgot-password'
    | '/sign-in'
    | '/sign-up'
    | '/me'
    | '/email-verification'
    | '/reset-password'
    | '/account'
    | '/password'
    | '/users/$id'
    | '/users'
  id:
    | '__root__'
    | '/'
    | '/(dashboard)'
    | '/(auth)/(query)'
    | '/(dashboard)/(settings)'
    | '/(auth)/forgot-password'
    | '/(auth)/sign-in'
    | '/(auth)/sign-up'
    | '/(dashboard)/me'
    | '/(auth)/(query)/email-verification'
    | '/(auth)/(query)/reset-password'
    | '/(dashboard)/(settings)/account'
    | '/(dashboard)/(settings)/password'
    | '/(dashboard)/users/$id'
    | '/(dashboard)/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PageRoute: typeof PageRoute
  dashboardLayoutRoute: typeof dashboardLayoutRouteWithChildren
  authqueryLayoutRoute: typeof authqueryLayoutRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authSignInRoute: typeof authSignInRoute
  authSignUpRoute: typeof authSignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(dashboard)': {
      id: '/(dashboard)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/me': {
      id: '/(dashboard)/me'
      path: '/me'
      fullPath: '/me'
      preLoaderRoute: typeof dashboardMeRouteImport
      parentRoute: typeof dashboardLayoutRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/(settings)': {
      id: '/(dashboard)/(settings)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardsettingsLayoutRouteImport
      parentRoute: typeof dashboardLayoutRoute
    }
    '/(auth)/(query)': {
      id: '/(auth)/(query)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authqueryLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/users/': {
      id: '/(dashboard)/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof dashboardUsersPageRouteImport
      parentRoute: typeof dashboardLayoutRoute
    }
    '/(dashboard)/users/$id': {
      id: '/(dashboard)/users/$id'
      path: '/users/$id'
      fullPath: '/users/$id'
      preLoaderRoute: typeof dashboardUsersIdRouteImport
      parentRoute: typeof dashboardLayoutRoute
    }
    '/(dashboard)/(settings)/password': {
      id: '/(dashboard)/(settings)/password'
      path: '/password'
      fullPath: '/password'
      preLoaderRoute: typeof dashboardsettingsPasswordRouteImport
      parentRoute: typeof dashboardsettingsLayoutRoute
    }
    '/(dashboard)/(settings)/account': {
      id: '/(dashboard)/(settings)/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof dashboardsettingsAccountRouteImport
      parentRoute: typeof dashboardsettingsLayoutRoute
    }
    '/(auth)/(query)/reset-password': {
      id: '/(auth)/(query)/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof authqueryResetPasswordRouteImport
      parentRoute: typeof authqueryLayoutRoute
    }
    '/(auth)/(query)/email-verification': {
      id: '/(auth)/(query)/email-verification'
      path: '/email-verification'
      fullPath: '/email-verification'
      preLoaderRoute: typeof authqueryEmailVerificationRouteImport
      parentRoute: typeof authqueryLayoutRoute
    }
  }
}

interface dashboardsettingsLayoutRouteChildren {
  dashboardsettingsAccountRoute: typeof dashboardsettingsAccountRoute
  dashboardsettingsPasswordRoute: typeof dashboardsettingsPasswordRoute
}

const dashboardsettingsLayoutRouteChildren: dashboardsettingsLayoutRouteChildren =
  {
    dashboardsettingsAccountRoute: dashboardsettingsAccountRoute,
    dashboardsettingsPasswordRoute: dashboardsettingsPasswordRoute,
  }

const dashboardsettingsLayoutRouteWithChildren =
  dashboardsettingsLayoutRoute._addFileChildren(
    dashboardsettingsLayoutRouteChildren,
  )

interface dashboardLayoutRouteChildren {
  dashboardsettingsLayoutRoute: typeof dashboardsettingsLayoutRouteWithChildren
  dashboardMeRoute: typeof dashboardMeRoute
  dashboardUsersIdRoute: typeof dashboardUsersIdRoute
  dashboardUsersPageRoute: typeof dashboardUsersPageRoute
}

const dashboardLayoutRouteChildren: dashboardLayoutRouteChildren = {
  dashboardsettingsLayoutRoute: dashboardsettingsLayoutRouteWithChildren,
  dashboardMeRoute: dashboardMeRoute,
  dashboardUsersIdRoute: dashboardUsersIdRoute,
  dashboardUsersPageRoute: dashboardUsersPageRoute,
}

const dashboardLayoutRouteWithChildren = dashboardLayoutRoute._addFileChildren(
  dashboardLayoutRouteChildren,
)

interface authqueryLayoutRouteChildren {
  authqueryEmailVerificationRoute: typeof authqueryEmailVerificationRoute
  authqueryResetPasswordRoute: typeof authqueryResetPasswordRoute
}

const authqueryLayoutRouteChildren: authqueryLayoutRouteChildren = {
  authqueryEmailVerificationRoute: authqueryEmailVerificationRoute,
  authqueryResetPasswordRoute: authqueryResetPasswordRoute,
}

const authqueryLayoutRouteWithChildren = authqueryLayoutRoute._addFileChildren(
  authqueryLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  PageRoute: PageRoute,
  dashboardLayoutRoute: dashboardLayoutRouteWithChildren,
  authqueryLayoutRoute: authqueryLayoutRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authSignInRoute: authSignInRoute,
  authSignUpRoute: authSignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
